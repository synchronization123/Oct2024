<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DefectDojo Data Fetch</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .container {
            margin-top: 30px;
        }
        .section-title {
            margin-top: 20px;
            color: #495057;
        }
    </style>
</head>
<body>

<div class="container">
    <h2 class="text-center mb-4">DefectDojo Data Viewer</h2>
    
    <!-- Engagement ID Input -->
    <div class="mb-4">
        <label for="engagementId" class="form-label">Enter Engagement ID</label>
        <input type="text" class="form-control" id="engagementId" placeholder="Enter engagement ID">
        <button class="btn btn-primary mt-3" onclick="fetchData()">Fetch Data</button>
    </div>

    <!-- Display Engagement, Test, and Finding Data -->
    <div id="dataDisplay">
        <div id="engagementData" class="card mb-4 d-none">
            <div class="card-header">
                <h5 class="section-title">Engagement Details</h5>
            </div>
            <div class="card-body">
                <p><strong>Engagement Name:</strong> <span id="engagementName"></span></p>
                <p><strong>Engagement Description:</strong> <span id="engagementDescription"></span></p>
                <p><strong>Target Start Date:</strong> <span id="targetStart"></span></p>
                <p><strong>Target End Date:</strong> <span id="targetEnd"></span></p>
            </div>
        </div>

        <div id="testData" class="card mb-4 d-none">
            <div class="card-header">
                <h5 class="section-title">Test Details</h5>
            </div>
            <div class="card-body">
                <ul id="testList" class="list-group"></ul>
            </div>
        </div>

        <div id="findingData" class="card mb-4 d-none">
            <div class="card-header">
                <h5 class="section-title">Findings</h5>
            </div>
            <div class="card-body">
                <ul id="findingList" class="list-group"></ul>
            </div>
        </div>
    </div>
</div>

<script>
// API Base URL and token (update with actual token and URL)
const API_BASE_URL = "https://demo.defectdojo.org/api/v2";  // Replace with your actual base URL
const API_TOKEN = "YOUR_API_TOKEN";  // Replace with your actual API token

// Fetch data for Engagement, Test, and Findings
async function fetchData() {
    const engagementId = document.getElementById("engagementId").value;
    if (!engagementId) {
        alert("Please enter an Engagement ID");
        return;
    }

    try {
        // Fetch engagement data
        const engagementResponse = await fetch(`${API_BASE_URL}/engagements/${engagementId}/`, {
            headers: {
                "Authorization": `Token ${API_TOKEN}`
            }
        });
        const engagementData = await engagementResponse.json();
        displayEngagementData(engagementData);

        // Fetch test data associated with the engagement
        const testsResponse = await fetch(`${API_BASE_URL}/engagements/${engagementId}/tests/`, {
            headers: {
                "Authorization": `Token ${API_TOKEN}`
            }
        });
        const testData = await testsResponse.json();
        displayTestData(testData);

        // Fetch findings associated with the engagement
        const findingsResponse = await fetch(`${API_BASE_URL}/engagements/${engagementId}/findings/`, {
            headers: {
                "Authorization": `Token ${API_TOKEN}`
            }
        });
        const findingData = await findingsResponse.json();
        displayFindingData(findingData);
    } catch (error) {
        console.error("Error fetching data:", error);
        alert("An error occurred while fetching data.");
    }
}

// Display Engagement Data
function displayEngagementData(data) {
    document.getElementById("engagementName").textContent = data.name || "N/A";
    document.getElementById("engagementDescription").textContent = data.description || "N/A";
    document.getElementById("targetStart").textContent = data.target_start || "N/A";
    document.getElementById("targetEnd").textContent = data.target_end || "N/A";
    document.getElementById("engagementData").classList.remove("d-none");
}

// Display Test Data
function displayTestData(data) {
    const testList = document.getElementById("testList");
    testList.innerHTML = ""; // Clear previous results
    data.results.forEach(test => {
        const listItem = document.createElement("li");
        listItem.className = "list-group-item";
        listItem.textContent = `Test Title: ${test.title || "N/A"} - Status: ${test.status || "N/A"}`;
        testList.appendChild(listItem);
    });
    document.getElementById("testData").classList.remove("d-none");
}

// Display Finding Data
function displayFindingData(data) {
    const findingList = document.getElementById("findingList");
    findingList.innerHTML = ""; // Clear previous results
    data.results.forEach(finding => {
        const listItem = document.createElement("li");
        listItem.className = "list-group-item";
        listItem.textContent = `Finding Title: ${finding.title || "N/A"} - Severity: ${finding.severity || "N/A"}`;
        findingList.appendChild(listItem);
    });
    document.getElementById("findingData").classList.remove("d-none");
}
</script>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
</body>
</html>