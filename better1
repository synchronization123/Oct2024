import openpyxl
from openpyxl.styles import PatternFill, Font

# Input and output filenames
data_filename = "DATA.xlsx"
usernames_filename = "usernames.xlsx"
output_filename = "finalreport.xlsx"

# Load the workbooks
data_wb = openpyxl.load_workbook(data_filename)
usernames_wb = openpyxl.load_workbook(usernames_filename)

# Load the first sheet from each workbook
data_ws = data_wb.active
usernames_ws = usernames_wb.active

# Get the list of keywords from usernames.xlsx (excluding "request") and convert to lowercase
keywords = [
    cell.value.strip().lower() for cell in usernames_ws["A"] if cell.value and cell.value.strip().lower() != "request"
]

# Define styles
yellow_fill = PatternFill(start_color="FFFFE0", end_color="FFFFE0", fill_type="solid")  # Light yellow
red_font = Font(color="FF0000")  # Red font color

# Find the "Issue Key" column (assuming the first row contains headers)
issue_key_column = None
for col in data_ws.iter_cols(min_row=1, max_row=1, min_col=1, max_col=data_ws.max_column):
    if col[0].value and col[0].value.lower() == "issue key":
        issue_key_column = col[0].column
        break

if not issue_key_column:
    raise ValueError("The 'Issue Key' column was not found in DATA.xlsx.")

# Iterate over rows, starting from the second row (assuming the first row is headers)
for row in data_ws.iter_rows(min_row=2, max_row=data_ws.max_row, min_col=1, max_col=data_ws.max_column):
    row_has_keyword = False  # Track if any cell in the row matches a keyword
    for cell in row:
        if cell.value and isinstance(cell.value, str):
            # Check if the cell value (case-insensitive) contains any keyword
            if any(keyword in cell.value.lower() for keyword in keywords):
                cell.fill = yellow_fill
                row_has_keyword = True  # A keyword was found in this row

    # If no keyword is found in the row, set the Issue Key cell font to red
    if not row_has_keyword:
        issue_key_cell = row[issue_key_column - 1]
        issue_key_cell.font = red_font

# Save the modified data to finalreport.xlsx
data_wb.save(output_filename)

print(f"Processing complete. The updated file is saved as '{output_filename}'.")