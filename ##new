import requests
import json
from openpyxl import Workbook

# Helper function for making API calls
def get_json_data(url, token):
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(url, headers=headers)
    response.raise_for_status()
    return response.json()

# Task 1: Fetch data from Bitbucket API 1 and save to projects_git.xlsx
def task_1(bitbucket_api1_url, token):
    data = get_json_data(bitbucket_api1_url, token)
    projects = data.get("values", [])
    
    wb = Workbook()
    ws = wb.active
    ws.title = "Projects"
    ws.append(["Key", "Name"])  # Headers
    
    for project in projects:
        ws.append([project["key"], project["name"]])
    
    wb.save("projects_git.xlsx")
    print("Task 1 completed: projects_git.xlsx created.")

# Task 2: Fetch repos for each project key and save to repos_fit.xlsx
def task_2(bitbucket_api2_url, token):
    wb = Workbook()
    ws = wb.active
    ws.title = "Repos"
    ws.append(["Repo Name", "Name"])  # Headers
    
    # Read project keys from projects_git.xlsx
    project_wb = Workbook()
    project_wb = openpyxl.load_workbook("projects_git.xlsx")
    project_ws = project_wb.active
    
    for row in project_ws.iter_rows(min_row=2, values_only=True):
        key = row[0]
        repos_url = bitbucket_api2_url.format(key=key)
        data = get_json_data(repos_url, token)
        repos = data.get("values", [])
        
        for repo in repos:
            ws.append([repo["slug"], repo["name"]])
    
    wb.save("repos_fit.xlsx")
    print("Task 2 completed: repos_fit.xlsx created.")

# Task 3: Fetch data from Jenkins API and save to jenkins.xlsx
def task_3(jenkins_api_url, token):
    data = get_json_data(jenkins_api_url, token)
    jobs = data.get("jobs", [])
    
    wb = Workbook()
    ws = wb.active
    ws.title = "Jenkins"
    ws.append(["Name", "URL"])  # Headers
    
    for job in jobs:
        ws.append([job["name"], job["url"]])
    
    wb.save("jenkins.xlsx")
    print("Task 3 completed: jenkins.xlsx created.")

# Task 4: Fetch data from Sonar API and save to sonarprojects.xlsx
def task_4(sonar_api_url, token):
    data = get_json_data(sonar_api_url, token)
    components = data.get("components", [])
    
    wb = Workbook()
    ws = wb.active
    ws.title = "Sonar Projects"
    ws.append(["Key", "Name", "Analysis Date"])  # Headers
    
    for component in components:
        analysis_date = component.get("analysisDate", "").split("T")[0]
        ws.append([component["key"], component["name"], analysis_date])
    
    wb.save("sonarprojects.xlsx")
    print("Task 4 completed: sonarprojects.xlsx created.")

# Main function to execute tasks
def main():
    # API URLs and Tokens
    bitbucket_api1_url = "https://bitbucket.xrm.com/rest/api/latest/projects?limit=1000"
    bitbucket_api2_url = "https://bitbucket.xrm.com/rest/api/latest/projects/{key}/repos?limit=1000"
    jenkins_api_url = "https://jenkins.xrm.com/api/json?pretty=true?limit=1000"
    sonar_api_url = "https://sonar.xrm.com/api/components/search_projects?f=analysisDate&ps=500"
    
    bitbucket_token = "hdjdjdjd"
    jenkins_token = "jekdkkd"
    sonar_token = "jdjdjdkjd"
    
    # Execute tasks
    task_1(bitbucket_api1_url, bitbucket_token)
    task_2(bitbucket_api2_url, bitbucket_token)
    task_3(jenkins_api_url, jenkins_token)
    task_4(sonar_api_url, sonar_token)

if __name__ == "__main__":
    main()